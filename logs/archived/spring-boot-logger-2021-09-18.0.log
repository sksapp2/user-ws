2021-09-18 22:27:24,215 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 11068 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:27:24,239 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:27:24,239 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:27:24,239 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:27:24,359 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:27:24,367 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:27:25,775 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:27:26,135 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 348 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:27:27,647 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:27:29,727 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:27:29,743 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.455 seconds (JVM running for 9.229)
2021-09-18 22:27:36,149 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:27:38,176 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,967 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,975 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,975 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,975 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,983 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,983 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,983 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,991 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:38,999 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:27:46,032 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:28:03,572 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:29:08,316 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 13104 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:29:08,324 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:29:08,324 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:29:08,356 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:29:08,540 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:29:08,540 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:29:10,147 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:29:10,423 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 269 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:29:12,135 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:29:14,307 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:29:14,338 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.472 seconds (JVM running for 9.0)
2021-09-18 22:29:48,376 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 7012 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:29:48,392 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:29:48,392 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:29:48,439 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:29:48,548 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:29:48,548 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:29:49,954 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:29:50,236 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 274 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:29:51,751 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:29:53,813 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:29:53,829 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.043 seconds (JVM running for 8.502)
2021-09-18 22:30:12,224 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:30:12,244 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] user from db MonoNext
2021-09-18 22:30:14,782 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,250 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,254 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,261 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,261 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,269 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,269 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,277 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,285 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:30:15,285 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:15,056 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:41:15,088 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 6412 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:41:15,088 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:41:15,088 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:41:15,259 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:41:15,259 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:41:16,799 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:41:17,095 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 289 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:41:18,567 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:41:21,012 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:41:21,036 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.511 seconds (JVM running for 9.102)
2021-09-18 22:41:30,902 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:41:30,914 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-http-nio-3] user from db MonoNext
2021-09-18 22:41:32,404 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,910 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,910 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,918 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,918 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,918 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,926 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,926 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,934 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:41:32,952 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:29,981 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 6016 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:42:29,997 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:42:29,997 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:42:30,013 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:42:30,169 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:42:30,169 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:42:31,638 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:42:31,966 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 324 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:42:33,962 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:42:36,024 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:42:36,040 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.786 seconds (JVM running for 9.475)
2021-09-18 22:42:49,912 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,236 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:42:50,252 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:42:50,588 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,592 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,592 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,596 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,600 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,604 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,608 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,636 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:42:50,644 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:43:08,884 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:43:08,884 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:44:04,742 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 9276 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:44:04,766 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:44:04,766 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:44:04,829 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:44:04,917 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:44:04,917 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:44:06,437 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:44:06,881 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 437 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:44:08,584 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:44:10,890 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:44:10,905 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.721 seconds (JVM running for 9.259)
2021-09-18 22:44:24,425 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:24,489 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:44:24,505 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:44:25,101 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,109 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,109 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,113 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,117 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,121 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,125 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,129 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:44:25,141 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:20,819 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 10444 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:45:20,787 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:45:20,827 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:45:20,827 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:45:21,027 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:45:21,027 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:45:22,770 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:45:23,130 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 348 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:45:24,858 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:45:26,917 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:45:26,933 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.758 seconds (JVM running for 9.437)
2021-09-18 22:45:40,507 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:40,575 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:45:40,587 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:45:40,895 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:45:41,107 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,111 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,114 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,118 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,122 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,122 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,130 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,134 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:45:41,142 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:46:14,077 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:46:14,077 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:46:14,085 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:46:27,509 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:46:27,509 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:46:27,529 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:47:46,464 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 11152 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:47:46,472 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:47:46,472 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:47:46,512 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:47:46,632 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:47:46,632 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:47:48,192 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:47:48,512 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 311 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:47:50,008 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:47:52,180 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:47:52,196 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.295 seconds (JVM running for 8.803)
2021-09-18 22:48:09,312 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,400 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:48:09,412 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:48:09,652 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:48:09,656 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:48:09,904 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,904 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,908 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,912 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,924 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,928 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,932 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,936 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:48:09,944 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:52:27,989 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 12316 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:52:27,997 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:52:27,997 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:52:28,069 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:52:28,165 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:52:28,165 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:52:29,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:52:30,028 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 339 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:52:31,500 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:52:33,972 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:52:33,988 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.728 seconds (JVM running for 9.428)
2021-09-18 22:54:24,434 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 4360 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:54:24,450 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:54:24,450 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:54:24,562 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:54:24,642 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:54:24,642 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:54:26,514 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:54:26,794 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 274 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:54:28,169 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:54:30,659 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:54:30,675 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.859 seconds (JVM running for 9.409)
2021-09-18 22:55:18,006 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:55:18,014 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 3732 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:55:18,022 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:55:18,022 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:55:18,198 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:55:18,198 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:55:19,702 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:55:19,958 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 255 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:55:21,453 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:55:23,537 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:55:23,553 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.437 seconds (JVM running for 9.148)
2021-09-18 22:57:25,507 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:25,599 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:25,615 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:57:25,915 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:25,923 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 22:57:25,927 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-1-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:26,151 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,155 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,159 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,163 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,167 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,175 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,179 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,187 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:26,199 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:57:40,453 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:40,453 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:57:40,461 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:47,110 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:47,110 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:57:47,142 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:48,441 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:48,441 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:57:48,449 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:52,684 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:52,684 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:57:52,708 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:54,800 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:57:54,800 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:57:54,820 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:58:16,451 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:58:16,451 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:58:16,459 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:58:49,675 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 8432 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 22:58:49,683 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 22:58:49,683 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 22:58:49,851 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 22:58:49,915 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 22:58:49,923 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 22:58:51,299 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 22:58:51,622 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 314 ms. Found 1 R2DBC repository interfaces.
2021-09-18 22:58:53,133 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 22:58:55,172 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 22:58:55,196 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.146 seconds (JVM running for 8.94)
2021-09-18 22:59:06,093 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,169 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:59:06,189 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:59:06,440 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:59:06,444 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 22:59:06,480 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-1-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:59:06,780 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,784 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,784 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,792 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,796 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,800 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,804 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,808 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:06,812 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 22:59:09,343 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:59:09,343 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:59:09,351 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:59:15,621 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 22:59:15,621 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 22:59:15,629 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:10,486 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 8696 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:01:10,486 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:01:10,486 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:01:10,580 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:01:10,752 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:01:10,752 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:01:12,770 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:01:13,363 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 572 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:01:15,238 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:01:17,508 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:01:17,524 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 8.531 seconds (JVM running for 9.999)
2021-09-18 23:01:46,977 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,065 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:47,081 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:47,401 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:47,405 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:47,405 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:47,733 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,733 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,737 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,737 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,741 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,745 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,745 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,749 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:47,757 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:01:50,347 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:50,347 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:50,371 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:50,371 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:50,383 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-5-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:52,589 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:52,589 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:52,597 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:52,597 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:52,597 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-6-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:53,466 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:53,470 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:53,482 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:53,482 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:53,490 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-7-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:54,276 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:54,276 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:54,284 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:54,284 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:54,288 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-8-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:55,019 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:55,019 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:55,027 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:55,027 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:55,031 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-9-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:55,737 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:55,737 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:55,745 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:55,749 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:55,749 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-10-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:56,213 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:56,217 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:56,233 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:56,233 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:56,249 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-11-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:56,936 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:56,936 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:56,944 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:56,948 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:56,948 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-12-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:57,401 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:57,401 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:57,409 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:57,413 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-13-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:57,413 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:57,852 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:57,856 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:57,864 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:57,864 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:57,868 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-14-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,318 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,318 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:58,342 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,346 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:01:58,350 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-15-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,850 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,854 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:01:58,858 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,858 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-16-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:01:58,858 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:02:06,658 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:06,658 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:02:06,662 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:06,666 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-17-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:06,666 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:02:07,719 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:07,719 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:02:07,731 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:07,735 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:02:07,739 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-18-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:08,485 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:08,489 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:02:08,497 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:08,497 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-19-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:08,497 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:02:09,283 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:09,283 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:02:09,291 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:09,295 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:02:09,311 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-20-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:10,024 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:10,024 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:02:10,032 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:02:10,032 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:02:10,032 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-21-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:57,129 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:57,129 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:04:57,137 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:57,137 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:04:57,137 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-22-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:58,279 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:58,279 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:04:58,287 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:58,287 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:04:58,295 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-23-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:59,251 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:59,255 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:04:59,259 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:59,263 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-24-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:59,263 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:04:59,798 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:59,802 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:04:59,806 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:04:59,810 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:04:59,826 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-25-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:05:00,366 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:05:00,366 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:05:00,370 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:05:00,374 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-26-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:05:00,374 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:12:41,265 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 4712 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:12:41,265 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:12:41,265 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:12:41,265 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:12:41,421 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:12:41,421 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:12:42,734 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:12:43,093 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 351 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:12:44,640 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:12:46,921 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:12:46,968 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.368 seconds (JVM running for 9.148)
2021-09-18 23:13:04,808 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:04,883 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:13:04,899 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:13:05,187 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:13:05,195 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:13:05,199 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:13:05,523 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,527 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,531 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,535 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,539 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,539 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,543 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,547 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:13:05,551 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:14:25,364 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:14:25,364 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 12748 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:14:25,364 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:14:25,364 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:14:25,567 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:14:25,583 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:14:27,254 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:14:27,598 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 326 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:14:29,161 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:14:31,598 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:14:31,614 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.954 seconds (JVM running for 9.542)
2021-09-18 23:15:00,589 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:00,669 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:00,689 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:15:01,068 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:01,072 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:01,072 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:15:01,420 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,424 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,428 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,432 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,436 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,440 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,440 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,444 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,452 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:15:01,708 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:15:27,311 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:27,315 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:15:27,323 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:27,323 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:15:27,327 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-5-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:27,335 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:15:47,744 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:47,744 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:15:47,752 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:47,752 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:15:47,756 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-6-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:15:47,780 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:17:54,479 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:17:54,526 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 12192 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:17:54,526 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:17:54,526 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:17:54,729 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:17:54,729 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:17:56,448 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:17:56,791 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 332 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:17:58,494 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:18:00,744 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:18:00,760 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.953 seconds (JVM running for 9.498)
2021-09-18 23:18:10,642 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:10,702 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:18:10,714 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:18:11,010 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:18:11,014 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:18:11,014 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:18:11,390 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:18:11,406 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,410 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,414 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,422 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,426 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,426 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,430 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,438 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:18:11,446 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:06,655 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 10256 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:19:06,655 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:19:06,663 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:19:06,671 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:19:06,863 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:19:06,863 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:19:08,287 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:19:08,622 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 325 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:19:10,134 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:19:12,535 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:19:12,551 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.391 seconds (JVM running for 8.84)
2021-09-18 23:19:21,349 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:21,421 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:19:21,433 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:19:21,741 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:19:21,745 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:19:21,761 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:19:22,028 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:19:22,032 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,036 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,040 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,044 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,048 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,052 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,056 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,060 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:22,060 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:19:23,483 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:19:23,487 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:19:23,511 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:19:23,511 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:19:23,515 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-5-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:19:23,523 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:20:06,268 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:20:06,272 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:20:06,280 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:20:06,284 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:20:06,284 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-6-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:20:06,296 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:20:34,074 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 6108 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:20:34,082 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:20:34,090 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:20:34,122 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:20:34,242 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:20:34,242 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:20:35,570 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:20:35,898 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 318 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:20:37,410 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:20:39,481 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:20:39,513 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.045 seconds (JVM running for 8.539)
2021-09-18 23:24:01,901 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:01,989 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:24:02,005 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:24:02,309 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:24:02,313 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:24:02,313 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:24:02,589 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:24:02,593 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,597 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,601 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,601 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,613 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,613 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,617 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,621 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:02,633 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:24:08,405 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:24:08,407 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:24:08,415 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:24:08,417 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:24:08,432 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-5-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:24:08,448 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:25:57,005 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:25:57,007 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:25:57,015 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:25:57,016 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-6-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=null, deviceNumber=null, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:25:57,016 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:25:57,024 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-null] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:34:35,564 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 10992 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:34:35,587 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:34:35,588 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:34:35,684 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:34:35,786 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:34:35,786 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:34:37,473 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:34:37,840 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 359 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:34:39,416 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:34:41,576 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:34:41,594 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.695 seconds (JVM running for 9.476)
2021-09-18 23:34:50,603 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:50,679 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:34:50,695 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:34:51,013 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:34:51,017 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:34:51,040 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:34:51,315 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-12121212] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-12121212] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:34:51,319 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,322 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,328 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,337 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,341 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,344 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,346 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,349 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:34:51,352 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:39:54,645 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 11932 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:39:54,659 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:39:54,660 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:39:54,656 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:39:54,873 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:39:54,875 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:39:56,667 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:39:57,167 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 491 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:39:59,138 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:40:01,518 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:40:01,536 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 8.645 seconds (JVM running for 10.332)
2021-09-18 23:40:17,201 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,276 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:17,288 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:40:17,577 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:17,588 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:40:17,602 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:17,886 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,890 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,893 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,898 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,901 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,905 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,909 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,913 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:17,916 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:40:25,945 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:25,947 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:40:25,955 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:25,956 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:40:25,969 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-5-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:58,007 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:58,009 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:40:58,017 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:40:58,018 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:40:58,019 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-6-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:41:36,473 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 1580 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:41:36,504 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:41:36,505 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:41:36,526 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:41:36,689 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:41:36,690 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:41:38,151 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:41:38,447 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 288 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:41:40,185 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:41:42,363 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:41:42,379 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.476 seconds (JVM running for 9.034)
2021-09-18 23:42:47,626 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:47,725 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:42:47,745 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:42:48,110 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:42:48,114 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:42:48,137 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:42:48,375 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,379 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,382 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,387 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,394 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,397 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,400 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,402 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:42:48,407 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:43:26,503 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:43:26,504 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:43:26,512 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:43:26,513 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:43:26,518 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-5-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:44:24,857 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 12176 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:44:24,864 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:44:24,865 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:44:24,944 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:44:25,025 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:44:25,025 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:44:26,793 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:44:27,146 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 344 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:44:28,657 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:44:30,669 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:44:30,718 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.639 seconds (JVM running for 9.127)
2021-09-18 23:46:23,408 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 10460 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:46:23,416 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:46:23,418 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:46:23,485 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:46:23,589 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:46:23,590 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:46:25,409 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:46:25,800 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 385 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:46:27,560 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:46:29,876 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:46:29,894 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 8.342 seconds (JVM running for 10.064)
2021-09-18 23:46:38,836 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:38,941 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:46:38,956 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:46:39,269 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:46:39,274 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:46:39,280 INFO com.infc.ms.user.service.impl.UserServiceImpl [pool-4-thread-1] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:46:39,523 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,526 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,529 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,532 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,536 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,540 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,544 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,551 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:46:39,558 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:47:45,020 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 10912 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:47:45,018 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:47:45,029 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:47:45,030 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:47:45,196 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:47:45,197 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:47:46,692 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:47:47,014 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 315 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:47:48,589 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:47:50,590 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:47:50,606 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.195 seconds (JVM running for 8.692)
2021-09-18 23:48:05,867 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:05,953 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:48:05,968 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:48:06,307 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:48:06,316 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:48:06,334 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:48:06,678 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,682 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,685 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,687 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,690 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,698 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,701 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,707 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:06,716 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:48:59,544 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 1176 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:48:59,552 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:48:59,553 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:48:59,559 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:48:59,730 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:48:59,730 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:49:01,398 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:49:01,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 278 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:49:03,233 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:49:05,273 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:49:05,290 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.297 seconds (JVM running for 8.783)
2021-09-18 23:49:21,058 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,159 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:49:21,171 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:49:21,477 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:49:21,482 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:49:21,505 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123456, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:49:21,803 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-12121212] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123456-12121212] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:49:21,806 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,809 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,812 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,815 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,819 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,821 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,824 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,827 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:49:21,830 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:51:07,296 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:51:07,298 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:51:07,305 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:51:07,307 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:51:07,308 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:51:07,321 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123-12121212] does not exist.
Caused by: org.springframework.dao.TransientDataAccessResourceException: Failed to update table [user_tbl]. Row with Id [123-12121212] does not exist.
	at org.springframework.data.r2dbc.core.R2dbcEntityTemplate.lambda$doUpdate$14(R2dbcEntityTemplate.java:707)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:103)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
	at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onComplete(MonoStreamCollector.java:178)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:398)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:538)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onComplete(FluxWindowPredicate.java:310)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:229)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onComplete(DiscardOnCancelSubscriber.java:104)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:134)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:52:47,159 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:52:51,864 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 5420 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:52:51,878 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:52:51,879 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:52:51,971 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:52:52,073 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:52:52,074 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:52:53,791 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:52:54,149 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 349 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:52:55,898 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:52:58,156 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:52:58,176 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 8.074 seconds (JVM running for 9.758)
2021-09-18 23:53:04,006 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,097 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:53:04,109 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:53:04,399 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:53:04,407 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:53:04,423 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:53:04,741 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,744 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,747 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,751 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,754 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,757 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,760 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,763 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,766 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:53:04,832 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)]; Field 'mobile_number' doesn't have a default value; nested exception is io.r2dbc.spi.R2dbcDataIntegrityViolationException: [1364] [HY000] Field 'mobile_number' doesn't have a default value
Caused by: org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)]; Field 'mobile_number' doesn't have a default value; nested exception is io.r2dbc.spi.R2dbcDataIntegrityViolationException: [1364] [HY000] Field 'mobile_number' doesn't have a default value
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:229)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:147)
	at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:6896)
	at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:6949)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:411)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:488)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:377)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:842)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:451)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:393)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.signalAsyncError(FluxWindowPredicate.java:352)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:534)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onError(FluxWindowPredicate.java:289)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:191)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onNext(DiscardOnCancelSubscriber.java:70)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:119)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.r2dbc.spi.R2dbcDataIntegrityViolationException: Field 'mobile_number' doesn't have a default value
	at dev.miku.r2dbc.mysql.ExceptionFactory.createException(ExceptionFactory.java:94)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ SQL "INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)" [DatabaseClient]
Stack trace:
		at dev.miku.r2dbc.mysql.ExceptionFactory.createException(ExceptionFactory.java:94)
		at dev.miku.r2dbc.mysql.TextQueryHandler.accept(QueryFlow.java:317)
		at dev.miku.r2dbc.mysql.TextQueryHandler.accept(QueryFlow.java:292)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:169)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onNext(DiscardOnCancelSubscriber.java:70)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:119)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
		at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
		at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
		at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:55:32,719 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 9760 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:55:32,727 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:55:32,733 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:55:32,734 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:55:32,919 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:55:32,920 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:55:34,758 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:55:35,101 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 335 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:55:36,731 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:55:38,926 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:55:38,943 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 8.141 seconds (JVM running for 10.028)
2021-09-18 23:56:37,143 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 12100 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:56:37,150 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:56:37,151 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:56:37,173 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:56:37,298 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:56:37,300 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:56:39,012 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:56:39,357 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 337 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:56:41,118 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:56:43,226 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:56:43,244 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 7.783 seconds (JVM running for 9.33)
2021-09-18 23:56:51,017 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,078 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:56:51,093 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:56:51,412 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:56:51,419 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:56:51,441 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:56:51,766 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)]; Field 'mobile_number' doesn't have a default value; nested exception is io.r2dbc.spi.R2dbcDataIntegrityViolationException: [1364] [HY000] Field 'mobile_number' doesn't have a default value
Caused by: org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)]; Field 'mobile_number' doesn't have a default value; nested exception is io.r2dbc.spi.R2dbcDataIntegrityViolationException: [1364] [HY000] Field 'mobile_number' doesn't have a default value
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:229)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:147)
	at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:6896)
	at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:6949)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:411)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:488)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:377)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:842)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:451)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:393)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.signalAsyncError(FluxWindowPredicate.java:352)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:534)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onError(FluxWindowPredicate.java:289)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:191)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onNext(DiscardOnCancelSubscriber.java:70)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:119)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.r2dbc.spi.R2dbcDataIntegrityViolationException: Field 'mobile_number' doesn't have a default value
	at dev.miku.r2dbc.mysql.ExceptionFactory.createException(ExceptionFactory.java:94)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ SQL "INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)" [DatabaseClient]
Stack trace:
		at dev.miku.r2dbc.mysql.ExceptionFactory.createException(ExceptionFactory.java:94)
		at dev.miku.r2dbc.mysql.TextQueryHandler.accept(QueryFlow.java:317)
		at dev.miku.r2dbc.mysql.TextQueryHandler.accept(QueryFlow.java:292)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:169)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onNext(DiscardOnCancelSubscriber.java:70)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:119)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
		at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
		at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
		at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:56:51,782 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,785 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,789 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,792 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,795 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,798 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,801 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,803 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:56:51,811 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:06,308 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting UserApplication using Java 11 on DESKTOP-5BBDTSL with PID 7060 (E:\mobile microservice app\user-ms\target\classes started by Santosh in E:\mobile microservice app\user-ms)
2021-09-18 23:58:06,323 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.5.4, Spring v5.3.9
2021-09-18 23:58:06,323 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: local
2021-09-18 23:58:06,464 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.0.Final
2021-09-18 23:58:06,511 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-09-18 23:58:06,511 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-09-18 23:58:08,705 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2021-09-18 23:58:09,148 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 433 ms. Found 1 R2DBC repository interfaces.
2021-09-18 23:58:10,976 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2021-09-18 23:58:13,351 INFO org.springframework.boot.web.embedded.netty.NettyWebServer [restartedMain] Netty started on port 8080
2021-09-18 23:58:13,366 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started UserApplication in 9.029 seconds (JVM running for 10.704)
2021-09-18 23:58:22,733 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:22,838 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] sign up user SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:58:22,855 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] user from db MonoNext
2021-09-18 23:58:23,133 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] insert into db SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:58:23,140 INFO com.infc.ms.user.service.impl.UserServiceImpl [reactor-tcp-nio-2] shutdown executors true
2021-09-18 23:58:23,148 INFO com.infc.ms.user.service.impl.UserServiceImpl [ForkJoinPool.commonPool-worker-3] set value in user model SignUpRequest(mobileNumber=123, operator=AIRTEL, deviceNumber=12121212, countryPhoneCode=121, userContactDetails=null)
2021-09-18 23:58:23,472 ERROR reactor.util.Loggers$Slf4JLogger [reactor-tcp-nio-2] Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)]; Field 'mobile_number' doesn't have a default value; nested exception is io.r2dbc.spi.R2dbcDataIntegrityViolationException: [1364] [HY000] Field 'mobile_number' doesn't have a default value
Caused by: org.springframework.dao.DataIntegrityViolationException: executeMany; SQL [INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)]; Field 'mobile_number' doesn't have a default value; nested exception is io.r2dbc.spi.R2dbcDataIntegrityViolationException: [1364] [HY000] Field 'mobile_number' doesn't have a default value
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:229)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:147)
	at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:6896)
	at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:6949)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:411)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:488)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:495)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:720)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:832)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:62)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4338)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:377)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:842)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:451)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:393)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.signalAsyncError(FluxWindowPredicate.java:352)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.checkTerminated(FluxWindowPredicate.java:534)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drainLoop(FluxWindowPredicate.java:486)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.drain(FluxWindowPredicate.java:430)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onError(FluxWindowPredicate.java:289)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:191)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onNext(DiscardOnCancelSubscriber.java:70)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:119)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
	at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
	at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.r2dbc.spi.R2dbcDataIntegrityViolationException: Field 'mobile_number' doesn't have a default value
	at dev.miku.r2dbc.mysql.ExceptionFactory.createException(ExceptionFactory.java:94)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ SQL "INSERT INTO user_tbl (user_id, operator, device_number, country_phone_code, created_date_time) VALUES (?, ?, ?, ?, ?)" [DatabaseClient]
Stack trace:
		at dev.miku.r2dbc.mysql.ExceptionFactory.createException(ExceptionFactory.java:94)
		at dev.miku.r2dbc.mysql.TextQueryHandler.accept(QueryFlow.java:317)
		at dev.miku.r2dbc.mysql.TextQueryHandler.accept(QueryFlow.java:292)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:169)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at dev.miku.r2dbc.mysql.util.DiscardOnCancelSubscriber.onNext(DiscardOnCancelSubscriber.java:70)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:119)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491)
		at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299)
		at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
		at reactor.core.publisher.EmitterProcessor.onNext(EmitterProcessor.java:265)
		at dev.miku.r2dbc.mysql.client.ReactorNettyClient$ResponseSink.next(ReactorNettyClient.java:340)
		at dev.miku.r2dbc.mysql.client.ReactorNettyClient.lambda$new$0(ReactorNettyClient.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:279)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:388)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:404)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.handleDecoded(MessageDuplexCodec.java:187)
		at dev.miku.r2dbc.mysql.client.MessageDuplexCodec.channelRead(MessageDuplexCodec.java:95)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2021-09-18 23:58:23,489 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,493 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,496 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,499 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,504 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,508 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,515 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,518 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
2021-09-18 23:58:23,522 WARN dev.miku.r2dbc.mysql.MySqlConnection [reactor-tcp-nio-2] The server timezone is <India Standard Time> that's unknown, trying to use system default timezone
